name: SERVER

on:
  push:
    branches:
      - 'main'
    paths:
      - 'server/**'
  workflow_dispatch:
    inputs:
      test:
        description: 'Should test server'
        required: true
        default: true

defaults:
  run:
    working-directory: ./server

jobs:
  test-server-local:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3.0.1

      - name: Create user config file 🛠
        run: ./config-generator.sh localhost

      - name: Install Python 3.10 🐍
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install PostgreSQL 🐘
        run: sudo systemctl start postgresql.service

      - name: Run initializing script 📜
        run: POSTGRES_ADMIN=postgres ./init-local.sh ./config.env

      - name: Run server tests 🧪
        run: ./init-local.sh ./config.env test

  test-server-docker:
    if: false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3.0.1

      - uses: KengoTODA/actions-setup-docker-compose@v1.0.7
        with:
          version: v2.2.3

      - name: Create user config file 🛠
        run: ./config-generator.sh localhost

      - name: Run server in Docker 📥
        run: docker-compose -f ./docker/docker-compose.yml --env-file=./docker/.env.development up --build -d

      - name: Install Newman for API testing 🧑‍🚀
        run: npm install newman

      - name: Wait for server to start ⏱
        uses: mydea/action-wait-for-api@v1.0.0
        with:
          url: https://api.example.com/status
          timeout: 150
          interval: 3

      - name: Run API tests 🌐
        run: cd ./tests/ && newman run ./HogWeedGoAPI.postman_collection.json

      - name: Stop server container 📤
        run: docker-compose -f ./docker/docker-compose.yml --env-file=./docker/.env.development stop -t 30

  publish-server-image:
    runs-on: ubuntu-latest
    needs: [test-server-local, test-server-docker]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3.0.1

      - name: Log in to the Container registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.7.0
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          file: ./docker/Dockerfile-alpine
          build-args: |
            WORKDIR=app
            HOGWEED_PORT=3000
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
