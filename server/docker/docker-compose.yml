version: "3.9"

services:
  hogweed-server:
    image: ghcr.io/pseusys/hogweedgo:main
    container_name: hogweed-server
    restart: always
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-alpine
      args:
        - WORKDIR=app
        - HOGWEED_PORT=3000
    env_file:
      - ../config.env
    environment:
      - DOCKER=True
      - ENV
      - POSTGRES_PORT=5432
      - HOGWEED_PORT=3000
      - SERVER_PORT_HTTP
      - SERVER_PORT_HTTPS
      - MOCK_SMTP_SERVER
    depends_on:
      database:
        condition: service_healthy
      mail-agent:
        condition: service_healthy
    expose:
      - 3000
    volumes:
      - ../docker-volume/static:/app/static
      - ../docker-volume/media:/app/media
      - ../docker-volume/backup:/app/backup
      - ../docker-volume/logs:/app/logs
    healthcheck:
      test: netstat -an | grep "$$HOGWEED_PORT" > /dev/null
      interval: 10s
      timeout: 5s
      retries: 3

  nginx-gateway:
    image: nginx:1.21.6-alpine
    container_name: nginx-gateway
    restart: always
    environment:
      - NGINX_ENVSUBST_TEMPLATE_DIR=/configs
      - NGINX_PORT_HTTP=80
      - NGINX_PORT_HTTPS=443
      - HOGWEED_PORT=3000
    depends_on:
      hogweed-server:
        condition: service_healthy
    ports:
      - ${SERVER_PORT_HTTP}:80
      - ${SERVER_PORT_HTTPS}:443
    configs:
      - source: nginx-config
        target: /configs/default.conf.template
    secrets:
      - ssl-cert.pem
      - ssl-key.pem
    volumes:
      - ../docker-volume/static:/app/static
      - ../docker-volume/media:/app/media
    healthcheck:
      test: ps -ef | grep nginx > /dev/null
      interval: 10s
      timeout: 5s
      retries: 3

  mail-agent:
    image: ixdotai/smtp
    container_name: mail-agent
    restart: always
    environment:
      - CERTIFICATE_PATH=/run/secrets/tls-cert.pem
      - KEY_PATH=/run/secrets/tls-key.pem
    expose:
      - 25
    secrets:
      - tls-cert.pem
      - tls-key.pem
    healthcheck:
      test: exiwhat > /dev/null
      interval: 10s
      timeout: 5s
      retries: 3

  database:
    image: postgis/postgis:14-3.2-alpine
    container_name: database
    restart: always
    env_file:
      - ../config.env
    expose:
      - 5432
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB" > /dev/null
      interval: 10s
      timeout: 5s
      retries: 3

configs:
  nginx-config:
    file: ./nginx.conf.template

secrets:
  ssl-key.pem:
    file: ../certificates/ssl_key.pem
  ssl-cert.pem:
    file: ../certificates/ssl_cert.pem
  tls-key.pem:
    file: ../certificates/tls_key.pem
  tls-cert.pem:
    file: ../certificates/tls_cert.pem

networks:
  default:
    driver: bridge

volumes:
  docker-volume: {}
