version: "3.9"

services:
  hogweed_server:
    image: pseusys/hogweedgo:0.0.1
    container_name: hogweed_server
    restart: always
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        - WORKDIR=app
        - HOGWEED_PORT
    env_file:
      - ../config.env
    environment:
      - DOCKER=True
      - ENV
      - POSTGRES_PORT=5432
      - HOGWEED_PORT
      - SERVER_PORT
      - MOCK_SMTP_SERVER
    depends_on:
      database:
        condition: service_healthy
      mail-agent:
        condition: service_healthy
    expose:
      - $HOGWEED_PORT
    volumes:
      - ../docker-volume/static:/app/static
      - ../docker-volume/media:/app/media
      - ../docker-volume/backup:/app/backup
      - ../docker-volume/logs:/app/logs
    healthcheck:
      test: wget -q -O - localhost:$HOGWEED_PORT/healthcheck
      interval: 10s
      timeout: 5s
      retries: 3

  nginx_gateway:
    image: nginx:1.21.6-alpine
    container_name: nginx_gateway
    restart: always
    environment:
      - NGINX_ENVSUBST_TEMPLATE_DIR=/configs
      - NGINX_PORT
      - HOGWEED_PORT
    depends_on:
      hogweed_server:
        condition: service_healthy
    ports:
      - ${SERVER_PORT}:${NGINX_PORT}
    configs:
      - source: nginx-config
        target: /configs/default.conf.template
    volumes:
      - ../docker-volume/static:/app/static
      - ../docker-volume/media:/app/media
    healthcheck:
      test: service nginx status
      interval: 10s
      timeout: 5s
      retries: 3

  mail-agent:
    image: ixdotai/smtp
    container_name: mail-agent
    restart: always
    expose:
      - 25
    healthcheck:
      test: exim -bV
      interval: 10s
      timeout: 5s
      retries: 3

  database:
    image: postgis/postgis:14-3.2-alpine
    container_name: database
    restart: always
    env_file:
      - ../config.env
    expose:
      - 5432
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      interval: 10s
      timeout: 5s
      retries: 3

configs:
  nginx-config:
    file: ./default.conf.template

secrets:
  ssl-config:
    file: ...

networks:
  default:
    driver: bridge

volumes:
  docker-volume: {}
